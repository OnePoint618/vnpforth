Grammar

    0 $accept: program "end of file"

    1 program: elements "end of file"

    2 elements: /* empty */
    3         | elements element

    4 element: definition
    5        | declaration
    6        | statement
    7        | error "word"

    8 declaration: VARIABLE "word"
    9            | FVARIABLE "word"
   10            | CONSTANT "word"
   11            | FCONSTANT "word"
   12            | CREATE "word" "integer" "word" ALLOT
   13            | CREATE "word" "integer" ALLOT

   14 statements: /* empty */
   15           | statements statement

   16 definition: ':' definedword statements semicolon_
   17           | noname statements semicolon_
   18           | CODE codeword codes end_code_

   19 semicolon_: ';'

   20 definedword: "word"

   21 noname: NONAME

   22 codeword: "word"

   23 codes: code
   24      | codes code

   25 code: "assembler string"

   26 end_code_: "END-CODE"

   27 statement: conditional
   28          | if_statement
   29          | do_loop
   30          | do_leave
   31          | begin_loop
   32          | begin_while
   33          | case_statement
   34          | recurse
   35          | EXIT
   36          | "print string"
   37          | "counted string"
   38          | "abort string"
   39          | "compilation comment"
   40          | "integer"
   41          | "float"
   42          | "literal string"
   43          | "char literal"
   44          | "address"
   45          | ALLOT
   46          | "word"

   47 conditional: "[IFDEF]" "word"
   48            | "[IFUNDEF]" "word"
   49            | "[THEN]"
   50            | "[ENDIF]"
   51            | "[ELSE]"

   52 if_statement: if_ statements then_endif_
   53             | if_ statements else_ statements then_endif_

   54 if_: IF

   55 then_endif_: THEN
   56            | ENDIF

   57 else_: ELSE

   58 do_loop: do_ statements loop_
   59        | do_ statements plus_loop_

   60 do_: DO
   61    | "?DO"

   62 loop_: LOOP

   63 plus_loop_: "+LOOP"

   64 do_leave: LEAVE
   65         | "?LEAVE"

   66 begin_loop: begin_ statements until_
   67           | begin_ statements repeat_again_

   68 begin_: "BEGIN"

   69 until_: UNTIL

   70 repeat_again_: REPEAT
   71              | AGAIN

   72 begin_while: WHILE

   73 case_statement: case_ casebody statements endcase_

   74 casebody: caseclause
   75         | casebody caseclause

   76 caseclause: statements of_ statements endof_

   77 case_: CASE

   78 endcase_: ENDCASE

   79 of_: OF

   80 endof_: ENDOF

   81 recurse: RECURSE


Terminals, with rules where they appear

"end of file" (0) 0 1
':' (58) 16
';' (59) 19
error (256) 7
VARIABLE (258) 8
FVARIABLE (259) 9
CONSTANT (260) 10
FCONSTANT (261) 11
CREATE (262) 12 13
ALLOT (263) 12 13 45
NONAME (264) 21
EXIT (265) 35
IF (266) 54
THEN (267) 55
ENDIF (268) 56
ELSE (269) 57
DO (270) 60
"?DO" (271) 61
LOOP (272) 62
"+LOOP" (273) 63
LEAVE (274) 64
"?LEAVE" (275) 65
"BEGIN" (276) 68
UNTIL (277) 69
WHILE (278) 72
REPEAT (279) 70
AGAIN (280) 71
CASE (281) 77
OF (282) 79
ENDOF (283) 80
ENDCASE (284) 78
RECURSE (285) 81
"print string" (286) 36
"counted string" (287) 37
"abort string" (288) 38
"compilation comment" (289) 39
"integer" (290) 12 13 40
"literal string" (291) 42
"float" (292) 41
"char literal" (293) 43
"address" (294) 44
"word" (295) 7 8 9 10 11 12 13 20 22 46 47 48
CODE (296) 18
"assembler string" (297) 25
"END-CODE" (298) 26
"[IFDEF]" (299) 47
"[IFUNDEF]" (300) 48
"[ELSE]" (301) 51
"[THEN]" (302) 49
"[ENDIF]" (303) 50


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
elements (53)
    on left: 2 3, on right: 1 3
element (54)
    on left: 4 5 6 7, on right: 3
declaration (55)
    on left: 8 9 10 11 12 13, on right: 5
statements (56)
    on left: 14 15, on right: 15 16 17 52 53 58 59 66 67 73 76
definition (57)
    on left: 16 17 18, on right: 4
semicolon_ (58)
    on left: 19, on right: 16 17
definedword (59)
    on left: 20, on right: 16
noname (60)
    on left: 21, on right: 17
codeword (61)
    on left: 22, on right: 18
codes (62)
    on left: 23 24, on right: 18 24
code (63)
    on left: 25, on right: 23 24
end_code_ (64)
    on left: 26, on right: 18
statement (65)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46, on right: 6 15
conditional (66)
    on left: 47 48 49 50 51, on right: 27
if_statement (67)
    on left: 52 53, on right: 28
if_ (68)
    on left: 54, on right: 52 53
then_endif_ (69)
    on left: 55 56, on right: 52 53
else_ (70)
    on left: 57, on right: 53
do_loop (71)
    on left: 58 59, on right: 29
do_ (72)
    on left: 60 61, on right: 58 59
loop_ (73)
    on left: 62, on right: 58
plus_loop_ (74)
    on left: 63, on right: 59
do_leave (75)
    on left: 64 65, on right: 30
begin_loop (76)
    on left: 66 67, on right: 31
begin_ (77)
    on left: 68, on right: 66 67
until_ (78)
    on left: 69, on right: 66
repeat_again_ (79)
    on left: 70 71, on right: 67
begin_while (80)
    on left: 72, on right: 32
case_statement (81)
    on left: 73, on right: 33
casebody (82)
    on left: 74 75, on right: 73 75
caseclause (83)
    on left: 76, on right: 74 75
case_ (84)
    on left: 77, on right: 73
endcase_ (85)
    on left: 78, on right: 73
of_ (86)
    on left: 79, on right: 76
endof_ (87)
    on left: 80, on right: 76
recurse (88)
    on left: 81, on right: 34


state 0

    0 $accept: . program "end of file"

    $default  reduce using rule 2 (elements)

    program   go to state 1
    elements  go to state 2


state 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


state 2

    1 program: elements . "end of file"
    3 elements: elements . element

    "end of file"          shift, and go to state 4
    error                  shift, and go to state 5
    VARIABLE               shift, and go to state 6
    FVARIABLE              shift, and go to state 7
    CONSTANT               shift, and go to state 8
    FCONSTANT              shift, and go to state 9
    CREATE                 shift, and go to state 10
    ALLOT                  shift, and go to state 11
    NONAME                 shift, and go to state 12
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    CODE                   shift, and go to state 33
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38
    ':'                    shift, and go to state 39

    element         go to state 40
    declaration     go to state 41
    definition      go to state 42
    noname          go to state 43
    statement       go to state 44
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 3

    0 $accept: program "end of file" .

    $default  accept


state 4

    1 program: elements "end of file" .

    $default  reduce using rule 1 (program)


state 5

    7 element: error . "word"

    "word"  shift, and go to state 57


state 6

    8 declaration: VARIABLE . "word"

    "word"  shift, and go to state 58


state 7

    9 declaration: FVARIABLE . "word"

    "word"  shift, and go to state 59


state 8

   10 declaration: CONSTANT . "word"

    "word"  shift, and go to state 60


state 9

   11 declaration: FCONSTANT . "word"

    "word"  shift, and go to state 61


state 10

   12 declaration: CREATE . "word" "integer" "word" ALLOT
   13            | CREATE . "word" "integer" ALLOT

    "word"  shift, and go to state 62


state 11

   45 statement: ALLOT .

    $default  reduce using rule 45 (statement)


state 12

   21 noname: NONAME .

    $default  reduce using rule 21 (noname)


state 13

   35 statement: EXIT .

    $default  reduce using rule 35 (statement)


state 14

   54 if_: IF .

    $default  reduce using rule 54 (if_)


state 15

   60 do_: DO .

    $default  reduce using rule 60 (do_)


state 16

   61 do_: "?DO" .

    $default  reduce using rule 61 (do_)


state 17

   64 do_leave: LEAVE .

    $default  reduce using rule 64 (do_leave)


state 18

   65 do_leave: "?LEAVE" .

    $default  reduce using rule 65 (do_leave)


state 19

   68 begin_: "BEGIN" .

    $default  reduce using rule 68 (begin_)


state 20

   72 begin_while: WHILE .

    $default  reduce using rule 72 (begin_while)


state 21

   77 case_: CASE .

    $default  reduce using rule 77 (case_)


state 22

   81 recurse: RECURSE .

    $default  reduce using rule 81 (recurse)


state 23

   36 statement: "print string" .

    $default  reduce using rule 36 (statement)


state 24

   37 statement: "counted string" .

    $default  reduce using rule 37 (statement)


state 25

   38 statement: "abort string" .

    $default  reduce using rule 38 (statement)


state 26

   39 statement: "compilation comment" .

    $default  reduce using rule 39 (statement)


state 27

   40 statement: "integer" .

    $default  reduce using rule 40 (statement)


state 28

   42 statement: "literal string" .

    $default  reduce using rule 42 (statement)


state 29

   41 statement: "float" .

    $default  reduce using rule 41 (statement)


state 30

   43 statement: "char literal" .

    $default  reduce using rule 43 (statement)


state 31

   44 statement: "address" .

    $default  reduce using rule 44 (statement)


state 32

   46 statement: "word" .

    $default  reduce using rule 46 (statement)


state 33

   18 definition: CODE . codeword codes end_code_

    "word"  shift, and go to state 63

    codeword  go to state 64


state 34

   47 conditional: "[IFDEF]" . "word"

    "word"  shift, and go to state 65


state 35

   48 conditional: "[IFUNDEF]" . "word"

    "word"  shift, and go to state 66


state 36

   51 conditional: "[ELSE]" .

    $default  reduce using rule 51 (conditional)


state 37

   49 conditional: "[THEN]" .

    $default  reduce using rule 49 (conditional)


state 38

   50 conditional: "[ENDIF]" .

    $default  reduce using rule 50 (conditional)


state 39

   16 definition: ':' . definedword statements semicolon_

    "word"  shift, and go to state 67

    definedword  go to state 68


state 40

    3 elements: elements element .

    $default  reduce using rule 3 (elements)


state 41

    5 element: declaration .

    $default  reduce using rule 5 (element)


state 42

    4 element: definition .

    $default  reduce using rule 4 (element)


state 43

   17 definition: noname . statements semicolon_

    $default  reduce using rule 14 (statements)

    statements  go to state 69


state 44

    6 element: statement .

    $default  reduce using rule 6 (element)


state 45

   27 statement: conditional .

    $default  reduce using rule 27 (statement)


state 46

   28 statement: if_statement .

    $default  reduce using rule 28 (statement)


state 47

   52 if_statement: if_ . statements then_endif_
   53             | if_ . statements else_ statements then_endif_

    $default  reduce using rule 14 (statements)

    statements  go to state 70


state 48

   29 statement: do_loop .

    $default  reduce using rule 29 (statement)


state 49

   58 do_loop: do_ . statements loop_
   59        | do_ . statements plus_loop_

    $default  reduce using rule 14 (statements)

    statements  go to state 71


state 50

   30 statement: do_leave .

    $default  reduce using rule 30 (statement)


state 51

   31 statement: begin_loop .

    $default  reduce using rule 31 (statement)


state 52

   66 begin_loop: begin_ . statements until_
   67           | begin_ . statements repeat_again_

    $default  reduce using rule 14 (statements)

    statements  go to state 72


state 53

   32 statement: begin_while .

    $default  reduce using rule 32 (statement)


state 54

   33 statement: case_statement .

    $default  reduce using rule 33 (statement)


state 55

   73 case_statement: case_ . casebody statements endcase_

    $default  reduce using rule 14 (statements)

    statements  go to state 73
    casebody    go to state 74
    caseclause  go to state 75


state 56

   34 statement: recurse .

    $default  reduce using rule 34 (statement)


state 57

    7 element: error "word" .

    $default  reduce using rule 7 (element)


state 58

    8 declaration: VARIABLE "word" .

    $default  reduce using rule 8 (declaration)


state 59

    9 declaration: FVARIABLE "word" .

    $default  reduce using rule 9 (declaration)


state 60

   10 declaration: CONSTANT "word" .

    $default  reduce using rule 10 (declaration)


state 61

   11 declaration: FCONSTANT "word" .

    $default  reduce using rule 11 (declaration)


state 62

   12 declaration: CREATE "word" . "integer" "word" ALLOT
   13            | CREATE "word" . "integer" ALLOT

    "integer"  shift, and go to state 76


state 63

   22 codeword: "word" .

    $default  reduce using rule 22 (codeword)


state 64

   18 definition: CODE codeword . codes end_code_

    "assembler string"  shift, and go to state 77

    codes  go to state 78
    code   go to state 79


state 65

   47 conditional: "[IFDEF]" "word" .

    $default  reduce using rule 47 (conditional)


state 66

   48 conditional: "[IFUNDEF]" "word" .

    $default  reduce using rule 48 (conditional)


state 67

   20 definedword: "word" .

    $default  reduce using rule 20 (definedword)


state 68

   16 definition: ':' definedword . statements semicolon_

    $default  reduce using rule 14 (statements)

    statements  go to state 80


state 69

   15 statements: statements . statement
   17 definition: noname statements . semicolon_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38
    ';'                    shift, and go to state 81

    semicolon_      go to state 82
    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 70

   15 statements: statements . statement
   52 if_statement: if_ statements . then_endif_
   53             | if_ statements . else_ statements then_endif_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    THEN                   shift, and go to state 84
    ENDIF                  shift, and go to state 85
    ELSE                   shift, and go to state 86
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    then_endif_     go to state 87
    else_           go to state 88
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 71

   15 statements: statements . statement
   58 do_loop: do_ statements . loop_
   59        | do_ statements . plus_loop_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LOOP                   shift, and go to state 89
    "+LOOP"                shift, and go to state 90
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    loop_           go to state 91
    plus_loop_      go to state 92
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 72

   15 statements: statements . statement
   66 begin_loop: begin_ statements . until_
   67           | begin_ statements . repeat_again_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    UNTIL                  shift, and go to state 93
    WHILE                  shift, and go to state 20
    REPEAT                 shift, and go to state 94
    AGAIN                  shift, and go to state 95
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    until_          go to state 96
    repeat_again_   go to state 97
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 73

   15 statements: statements . statement
   76 caseclause: statements . of_ statements endof_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    OF                     shift, and go to state 98
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    of_             go to state 99
    recurse         go to state 56


state 74

   73 case_statement: case_ casebody . statements endcase_
   75 casebody: casebody . caseclause

    $default  reduce using rule 14 (statements)

    statements  go to state 100
    caseclause  go to state 101


state 75

   74 casebody: caseclause .

    $default  reduce using rule 74 (casebody)


state 76

   12 declaration: CREATE "word" "integer" . "word" ALLOT
   13            | CREATE "word" "integer" . ALLOT

    ALLOT   shift, and go to state 102
    "word"  shift, and go to state 103


state 77

   25 code: "assembler string" .

    $default  reduce using rule 25 (code)


state 78

   18 definition: CODE codeword codes . end_code_
   24 codes: codes . code

    "assembler string"  shift, and go to state 77
    "END-CODE"          shift, and go to state 104

    code       go to state 105
    end_code_  go to state 106


state 79

   23 codes: code .

    $default  reduce using rule 23 (codes)


state 80

   15 statements: statements . statement
   16 definition: ':' definedword statements . semicolon_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38
    ';'                    shift, and go to state 81

    semicolon_      go to state 107
    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 81

   19 semicolon_: ';' .

    $default  reduce using rule 19 (semicolon_)


state 82

   17 definition: noname statements semicolon_ .

    $default  reduce using rule 17 (definition)


state 83

   15 statements: statements statement .

    $default  reduce using rule 15 (statements)


state 84

   55 then_endif_: THEN .

    $default  reduce using rule 55 (then_endif_)


state 85

   56 then_endif_: ENDIF .

    $default  reduce using rule 56 (then_endif_)


state 86

   57 else_: ELSE .

    $default  reduce using rule 57 (else_)


state 87

   52 if_statement: if_ statements then_endif_ .

    $default  reduce using rule 52 (if_statement)


state 88

   53 if_statement: if_ statements else_ . statements then_endif_

    $default  reduce using rule 14 (statements)

    statements  go to state 108


state 89

   62 loop_: LOOP .

    $default  reduce using rule 62 (loop_)


state 90

   63 plus_loop_: "+LOOP" .

    $default  reduce using rule 63 (plus_loop_)


state 91

   58 do_loop: do_ statements loop_ .

    $default  reduce using rule 58 (do_loop)


state 92

   59 do_loop: do_ statements plus_loop_ .

    $default  reduce using rule 59 (do_loop)


state 93

   69 until_: UNTIL .

    $default  reduce using rule 69 (until_)


state 94

   70 repeat_again_: REPEAT .

    $default  reduce using rule 70 (repeat_again_)


state 95

   71 repeat_again_: AGAIN .

    $default  reduce using rule 71 (repeat_again_)


state 96

   66 begin_loop: begin_ statements until_ .

    $default  reduce using rule 66 (begin_loop)


state 97

   67 begin_loop: begin_ statements repeat_again_ .

    $default  reduce using rule 67 (begin_loop)


state 98

   79 of_: OF .

    $default  reduce using rule 79 (of_)


state 99

   76 caseclause: statements of_ . statements endof_

    $default  reduce using rule 14 (statements)

    statements  go to state 109


state 100

   15 statements: statements . statement
   73 case_statement: case_ casebody statements . endcase_
   76 caseclause: statements . of_ statements endof_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    OF                     shift, and go to state 98
    ENDCASE                shift, and go to state 110
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    endcase_        go to state 111
    of_             go to state 99
    recurse         go to state 56


state 101

   75 casebody: casebody caseclause .

    $default  reduce using rule 75 (casebody)


state 102

   13 declaration: CREATE "word" "integer" ALLOT .

    $default  reduce using rule 13 (declaration)


state 103

   12 declaration: CREATE "word" "integer" "word" . ALLOT

    ALLOT  shift, and go to state 112


state 104

   26 end_code_: "END-CODE" .

    $default  reduce using rule 26 (end_code_)


state 105

   24 codes: codes code .

    $default  reduce using rule 24 (codes)


state 106

   18 definition: CODE codeword codes end_code_ .

    $default  reduce using rule 18 (definition)


state 107

   16 definition: ':' definedword statements semicolon_ .

    $default  reduce using rule 16 (definition)


state 108

   15 statements: statements . statement
   53 if_statement: if_ statements else_ statements . then_endif_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    THEN                   shift, and go to state 84
    ENDIF                  shift, and go to state 85
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    then_endif_     go to state 113
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    recurse         go to state 56


state 109

   15 statements: statements . statement
   76 caseclause: statements of_ statements . endof_

    ALLOT                  shift, and go to state 11
    EXIT                   shift, and go to state 13
    IF                     shift, and go to state 14
    DO                     shift, and go to state 15
    "?DO"                  shift, and go to state 16
    LEAVE                  shift, and go to state 17
    "?LEAVE"               shift, and go to state 18
    "BEGIN"                shift, and go to state 19
    WHILE                  shift, and go to state 20
    CASE                   shift, and go to state 21
    ENDOF                  shift, and go to state 114
    RECURSE                shift, and go to state 22
    "print string"         shift, and go to state 23
    "counted string"       shift, and go to state 24
    "abort string"         shift, and go to state 25
    "compilation comment"  shift, and go to state 26
    "integer"              shift, and go to state 27
    "literal string"       shift, and go to state 28
    "float"                shift, and go to state 29
    "char literal"         shift, and go to state 30
    "address"              shift, and go to state 31
    "word"                 shift, and go to state 32
    "[IFDEF]"              shift, and go to state 34
    "[IFUNDEF]"            shift, and go to state 35
    "[ELSE]"               shift, and go to state 36
    "[THEN]"               shift, and go to state 37
    "[ENDIF]"              shift, and go to state 38

    statement       go to state 83
    conditional     go to state 45
    if_statement    go to state 46
    if_             go to state 47
    do_loop         go to state 48
    do_             go to state 49
    do_leave        go to state 50
    begin_loop      go to state 51
    begin_          go to state 52
    begin_while     go to state 53
    case_statement  go to state 54
    case_           go to state 55
    endof_          go to state 115
    recurse         go to state 56


state 110

   78 endcase_: ENDCASE .

    $default  reduce using rule 78 (endcase_)


state 111

   73 case_statement: case_ casebody statements endcase_ .

    $default  reduce using rule 73 (case_statement)


state 112

   12 declaration: CREATE "word" "integer" "word" ALLOT .

    $default  reduce using rule 12 (declaration)


state 113

   53 if_statement: if_ statements else_ statements then_endif_ .

    $default  reduce using rule 53 (if_statement)


state 114

   80 endof_: ENDOF .

    $default  reduce using rule 80 (endof_)


state 115

   76 caseclause: statements of_ statements endof_ .

    $default  reduce using rule 76 (caseclause)
